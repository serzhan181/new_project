{"version":3,"sources":["components/Navbar/Navbar.js","redux/actions/actionTypes.js","redux/DAL/api.js","redux/actions/authActions.js","redux/actions/usersActions.js","components/Navbar/NavbarContainer.js","components/Preloader/Preloader.jsx","components/BlackCenter/BlockCenter.js","components/Error/ErrorWrapper.js","components/Notification/Notification.jsx","components/Portal/Portal.jsx","pages/Auth/Login/Login.js","pages/Auth/Login/LoginContainer.js","pages/Profile/Post.jsx","pages/Profile/Profile.jsx","pages/Profile/ProfileContainer.js","redux/actions/profileActions.js","pages/Users/User.jsx","pages/Users/Users.jsx","pages/Users/UsersContainer.js","App.js","redux/reducers/authReducer.js","redux/reducers/profileReducer.js","redux/reducers/usersReducer.js","redux/store.js","index.js","assets/images/noUserImg.png"],"names":["Navbar","userName","logout","className","to","onClick","ADD_POST","instance","axios","create","withCredentials","baseURL","headers","auth","requireData","post","email","password","rememberMe","rememberBe","delete","get","profileAPI","id","status","put","usersAPI","setAuth","payload","type","setLoading","boolean","toSubscribe","subscribingProcess","isFetching","connect","state","login","a","Preloader","BlockCenter","children","ErrorWrapper","Notification","notType","title","description","notification","message","Portal","props","el","document","createElement","body","appendChild","this","removeChild","createPortal","Component","Login","accessLogin","LoginForm","onSubmit","values","setSubmitting","setFieldError","hasError","initialValues","validate","errors","isValid","isSubmitting","handleSubmit","name","field","placeholder","size","Password","autoComplete","component","filed","Text","loading","disabled","isLoading","dispatch","authData","data","resultCode","messages","join","checkIfAuthorized","requiredData","error","Post","profileImg","text","src","alt","Profile","addPost","fullName","posts","postText","onPostText","editMode","setEditMode","statusValue","setStatusValue","onDisableSaveStatus","enableChange","value","onChange","e","target","onBlur","autoFocus","maxLength","length","map","key","noUserImg","compose","profilePage","getProfile","response","photos","small","aboutMe","setStatus","statusChanged","withRouter","match","userId","useState","setEnableChange","useEffect","setId","params","profileId","setPostText","newStatus","isStatusChanged","newChar","char","User","img","followed","subscribe","isSubscribing","history","push","toString","Users","React","memo","useHistory","current","page","pageSize","total","totalUsers","showTitle","simple","responsive","users","u","some","UsersContainer","getUsers","fetchData","usersPage","items","totalCount","path","render","exact","initialState","action","new_post","concat","usersReducer","filter","reducers","combineReducers","store","createStore","applyMiddleware","thunk","window","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a88b6669.chunk.js","sourcesContent":["import React from 'react'\r\nimport './navbar.scss'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = ({ userName, logout }) => (\r\n  <nav className='navbar'>\r\n    <ul className='navbar__nav'>\r\n      <li className='navbar__item'>\r\n        <h3 className='navbar__item-userName'>{userName}</h3>\r\n        <NavLink to='/profile'>\r\n          <i className='far fa-user-circle fa-2x'></i>\r\n        </NavLink>\r\n      </li>\r\n      <li className='navbar__item'>\r\n        <NavLink to='/users'>\r\n          <i className='fas fa-search-plus fa-2x'></i>\r\n        </NavLink>\r\n      </li>\r\n      <li className='navbar__item'>\r\n        <div className='navbar__status'>\r\n          <i className='fas fa-plug fa-2x fa-color'></i>\r\n        </div>\r\n        <Link onClick={() => logout()} to='/login'>\r\n          Logout\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n)\r\n","export const SET_AUTH = 'AUTH/SET_AUTH'\r\nexport const SET_LOADING = 'SET_LOADING'\r\nexport const ADD_POST = 'PROFILE/ADD_POST'\r\nexport const SET_PROFILE_DATA = 'PROFILE/SET_PROFILE_DATA'\r\nexport const CHANGE_PAGE = 'USERS/CHANGE_PAGE'\r\nexport const GET_USERS = 'USERS/GET_USERS'\r\nexport const TO_FOLLOW = 'USERS/TO_FOLLOW'\r\nexport const SUBSCRIBE = 'USERS/SUBSCRIBE'\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': 'ae0b1d97-f737-4337-8a4d-8719ab70afbb',\r\n  },\r\n})\r\n\r\nexport const auth = {\r\n  login(requireData) {\r\n    return instance.post('auth/login', {\r\n      email: requireData.email,\r\n      password: requireData.password,\r\n      rememberMe: requireData.rememberBe ? true : false,\r\n    })\r\n  },\r\n\r\n  logout() {\r\n    return instance.delete('auth/login')\r\n  },\r\n\r\n  isAuthorized() {\r\n    return instance.get('/auth/me')\r\n  },\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(id) {\r\n    return instance.get(`profile/${id}`)\r\n  },\r\n\r\n  setStatus(status) {\r\n    return instance.put('profile/status', { status })\r\n  },\r\n}\r\n\r\nexport const usersAPI = {\r\n  getUsers() {\r\n    return instance.get('/users')\r\n  },\r\n\r\n  subscribe(id) {\r\n    return instance.post(`follow/${id}`)\r\n  },\r\n\r\n  unSubscribe(id) {\r\n    return instance.delete(`follow/${id}`)\r\n  },\r\n}\r\n","import { auth } from '../DAL/api'\r\nimport { SET_AUTH, SET_LOADING } from './'\r\n// actions\r\nconst setAuth = (payload) => ({ type: SET_AUTH, payload })\r\nexport const setLoading = (boolean) => ({ type: SET_LOADING, boolean })\r\n\r\n// thunks\r\nexport const login = (requireData) => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  const authData = await auth.login(requireData)\r\n  dispatch(setLoading(false))\r\n  if (authData.data.resultCode === 0) dispatch(setAuth(authData.data.data))\r\n  else return authData.data.messages.join('')\r\n}\r\n\r\nexport const checkIfAuthorized = () => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  const response = await auth.isAuthorized()\r\n  dispatch(setLoading(false))\r\n  if (response.data.resultCode === 1) return 1\r\n  else {\r\n    dispatch(setAuth(response.data.data))\r\n    return 0\r\n  }\r\n}\r\n\r\nexport const logout = () => async () => {\r\n  await auth.logout()\r\n}\r\n","import { setLoading, GET_USERS, TO_FOLLOW, SUBSCRIBE } from '.'\r\nimport { usersAPI } from '../DAL/api'\r\n\r\nconst setUsers = (payload, totalUsers) => ({\r\n  type: GET_USERS,\r\n  payload,\r\n  totalUsers,\r\n})\r\n\r\nconst toSubscribe = (id) => ({ type: TO_FOLLOW, id })\r\nconst subscribingProcess = (isFetching, id) => ({\r\n  type: SUBSCRIBE,\r\n  isFetching,\r\n  id,\r\n})\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  const response = await usersAPI.getUsers()\r\n  dispatch(setLoading(false))\r\n  if (response.status === 200) {\r\n    dispatch(setUsers(response.data.items, response.data.totalCount))\r\n  }\r\n}\r\n\r\nexport const subscribe = (id) => async (dispatch) => {\r\n  dispatch(subscribingProcess(true, id))\r\n  const response = await usersAPI.subscribe(id)\r\n  dispatch(subscribingProcess(false, id))\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(toSubscribe(id))\r\n    return 0\r\n  }\r\n  return response.data.messages.join('')\r\n}\r\n\r\nexport const unSubscribe = (id) => async (dispatch) => {\r\n  dispatch(subscribingProcess(true, id))\r\n  const response = await usersAPI.subscribe(id)\r\n  dispatch(subscribingProcess(false, id))\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(toSubscribe(id))\r\n    return 0\r\n  }\r\n  return response.data.messages.join('')\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from './Navbar'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../redux/actions'\r\n\r\nconst NavbarContainer = ({ userName, logout }) => {\r\n  return <Navbar userName={userName} logout={logout} />\r\n}\r\n\r\nconst mapDispatchToProps = (state) => ({\r\n  userName: state.auth.login,\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { logout })(NavbarContainer)\r\n","import React from 'react'\r\nimport './Preloader.css'\r\nimport { BlockCenter } from '../'\r\n\r\nexport const Preloader = () => (\r\n  <BlockCenter>\r\n    <div className='lds-ring'>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </BlockCenter>\r\n)\r\n","import React from 'react'\r\nimport './blockCenter.scss'\r\n\r\nconst BlockCenter = ({ children }) => {\r\n  return <div className='center'>{children}</div>\r\n}\r\n\r\nexport default BlockCenter\r\n","import React from 'react'\r\nimport './errorwrapper.scss'\r\n\r\nexport const ErrorWrapper = ({ children }) => (\r\n  <div className='error'>\r\n    <strong>{children}</strong>\r\n  </div>\r\n)\r\n","import { notification } from 'antd'\r\n\r\nexport const Notification = (notType, title, description) => {\r\n  notification[notType]({\r\n    message: title,\r\n    description,\r\n  })\r\n}\r\n","import { Component } from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\nexport class Portal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.el = document.createElement('div')\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el)\r\n  }\r\n\r\n  render() {\r\n    return createPortal(this.props.children, this.el)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Button, Input, Checkbox, Typography } from 'antd'\r\nimport './login.scss'\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik'\r\nimport { BlockCenter, ErrorWrapper, Portal } from '../../../components'\r\n\r\nexport const Login = ({ accessLogin }) => {\r\n  return (\r\n    <Portal className='login__overlay'>\r\n      <BlockCenter>\r\n        <div className='login'>\r\n          <div className='login__header'>\r\n            <h2>Sign in</h2>\r\n            <p className='login__header-subtitle'>Please, sign in account</p>\r\n          </div>\r\n          <div className='login__body'>\r\n            <LoginForm accessLogin={accessLogin} />\r\n          </div>\r\n        </div>\r\n      </BlockCenter>\r\n    </Portal>\r\n  )\r\n}\r\n\r\nconst LoginForm = ({ accessLogin }) => {\r\n  const initialValues = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n  }\r\n\r\n  const validate = (values) => {\r\n    let errors = {}\r\n\r\n    if (!values.email) errors.email = 'It is required!'\r\n    if (!values.password) errors.password = 'It is required!'\r\n\r\n    return errors\r\n  }\r\n\r\n  const onSubmit = async (values, { setSubmitting, setFieldError }) => {\r\n    const hasError = await accessLogin(values)\r\n    if (hasError) setFieldError('password', hasError)\r\n    setSubmitting(false)\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validate={validate}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ isValid, isSubmitting, handleSubmit }) => (\r\n        <Form>\r\n          <Field name='email'>\r\n            {({ field }) => {\r\n              return (\r\n                <Input\r\n                  placeholder='email'\r\n                  size='middle'\r\n                  className='login__body-email'\r\n                  {...field}\r\n                />\r\n              )\r\n            }}\r\n          </Field>\r\n          <Field name='password'>\r\n            {({ field }) => (\r\n              <Input.Password\r\n                autoComplete='off'\r\n                placeholder='password'\r\n                className='login__body-password'\r\n                {...field}\r\n              />\r\n            )}\r\n          </Field>\r\n          <ErrorMessage name='password' component={ErrorWrapper} />\r\n          <Field name='rememberMe'>\r\n            {({ filed }) => (\r\n              <>\r\n                <Typography.Text type='secondary'>Remember me </Typography.Text>\r\n                <Checkbox {...filed} />\r\n              </>\r\n            )}\r\n          </Field>\r\n          <div className='login__footer'>\r\n            <Button\r\n              onClick={handleSubmit}\r\n              type='primary'\r\n              loading={isSubmitting}\r\n              disabled={!isValid && isSubmitting}\r\n            >\r\n              Sign in\r\n            </Button>\r\n            <Button type='text' className='login__footer-signUp'>\r\n              {' '}\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Login } from './Login'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../../redux/actions'\r\nimport { Notification } from '../../../components'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Button } from 'antd'\r\n\r\nconst LoginContainer = ({ login, checkIfAuthorized, id }) => {\r\n  const callNotification = () =>\r\n    Notification(\r\n      'info',\r\n      'Welcome!',\r\n      `\r\n  LOGIN: checkportfolio111@gmail.com\r\n\r\n  PASSWORD: 123456\r\n  `\r\n    )\r\n\r\n  const accessLogin = async (requiredData) => {\r\n    let error = await login(requiredData)\r\n    if (error) return error\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {id && <Redirect to='/profile' />}\r\n      <Login accessLogin={accessLogin} />\r\n      <Button\r\n        className='login__callNotification'\r\n        type='default'\r\n        onClick={callNotification}\r\n      >\r\n        Call Notification\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = ({ auth }) => ({\r\n  isLoading: auth.isLoading,\r\n  id: auth.id,\r\n})\r\n\r\nexport default connect(mapDispatchToProps, { login })(LoginContainer)\r\n","import React from 'react'\r\nimport './profile.scss'\r\n\r\nexport const Post = ({ profileImg, name, text }) => (\r\n  <div className='profile__post'>\r\n    <div className='profile__post-header'>\r\n      <img className='profile__post-image' src={profileImg} alt='post' />\r\n      <h4 className='profile__post-name'>{name}</h4>\r\n    </div>\r\n    <p className='profile__post-body'>{text}</p>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport './profile.scss'\r\nimport noUserImg from '../../assets/images/noUserImg.png'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport { Post } from './Post'\r\nimport { Button, Input } from 'antd'\r\n\r\nexport const Profile = ({\r\n  addPost,\r\n  profileImg,\r\n  fullName,\r\n  posts,\r\n  postText,\r\n  onPostText,\r\n  editMode,\r\n  setEditMode,\r\n  statusValue,\r\n  setStatusValue,\r\n  onDisableSaveStatus,\r\n  enableChange,\r\n}) => (\r\n  <div className='profile'>\r\n    <div className='profile__inner'>\r\n      <div className='profile__info'>\r\n        <div className='profile__info-header'>\r\n          <h3>{fullName}</h3>\r\n          <img className='profile__userImg' src={profileImg} alt='user' />\r\n        </div>\r\n        <div className='profile__info-body'>\r\n          {enableChange ? (\r\n            editMode ? (\r\n              <Input\r\n                value={statusValue}\r\n                onChange={(e) => setStatusValue(e.target.value)}\r\n                onBlur={(e) => onDisableSaveStatus(e.target.value)}\r\n                autoFocus={true}\r\n              />\r\n            ) : (\r\n              <>\r\n                {statusValue ? (\r\n                  <span className='profile__info-status'>{statusValue}</span>\r\n                ) : (\r\n                  <span className='empty_status'>Empty status</span>\r\n                )}\r\n                <Button size='small' onClick={setEditMode}>\r\n                  Change status\r\n                </Button>\r\n              </>\r\n            )\r\n          ) : (\r\n            <>\r\n              {statusValue ? (\r\n                <span className='profile__info-status'>{statusValue}</span>\r\n              ) : (\r\n                <span className='empty_status'>Empty status</span>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='profile__posts'>\r\n        <div className='profile__posts-addPost'>\r\n          <TextArea\r\n            className='profile__posts-input'\r\n            placeholder='Leave a message'\r\n            maxLength='300'\r\n            value={postText}\r\n            onChange={(e) => onPostText(e.target.value)}\r\n          />\r\n          <Button\r\n            disabled={!postText.length}\r\n            onClick={() => addPost(121, 'Anonymous')}\r\n          >\r\n            {'>>'}\r\n          </Button>\r\n        </div>\r\n        {posts.map((el) => (\r\n          <Post\r\n            key={el.id}\r\n            profileImg={noUserImg}\r\n            name={el.name}\r\n            text={el.text}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n","import React, { useState, useEffect } from 'react'\r\nimport noUserImg from '../../assets/images/noUserImg.png'\r\nimport { Profile } from './Profile.jsx'\r\nimport { connect } from 'react-redux'\r\nimport { addPost, getProfile, setStatus } from '../../redux/actions'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { Preloader, Notification } from '../../components'\r\n\r\nconst ProfileContainer = ({\r\n  addPost,\r\n  fullName,\r\n  profileImg,\r\n  posts,\r\n  status,\r\n  match,\r\n  getProfile,\r\n  userId,\r\n  isLoading,\r\n  setStatus,\r\n}) => {\r\n  const [enableChange, setEnableChange] = useState(false)\r\n  useEffect(() => {\r\n    const setId = match.params.profileId || userId\r\n    if (setId === userId) setEnableChange(true)\r\n    getProfile(setId)\r\n  }, [match.params.profileId, getProfile, userId])\r\n\r\n  // Add post\r\n  const [postText, setPostText] = useState('')\r\n  const onPostText = (newChar) => setPostText(newChar)\r\n\r\n  const addNewPost = (id, name) => {\r\n    addPost(id, name, postText)\r\n    setPostText('')\r\n  }\r\n\r\n  // Status logic\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const [statusValue, setStatusValue] = useState(status)\r\n\r\n  const onDisableSaveStatus = async (newStatus) => {\r\n    const isStatusChanged = await setStatus(newStatus)\r\n    setEditMode(!editMode)\r\n    if (isStatusChanged === 0) return Notification('success', 'Status changed!')\r\n    return Notification('error', 'Something went wrong...')\r\n  }\r\n\r\n  useEffect(() => setStatusValue(() => status), [status])\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Profile\r\n          fullName={fullName}\r\n          profileImg={profileImg || noUserImg}\r\n          addPost={addNewPost}\r\n          posts={posts}\r\n          postText={postText}\r\n          onPostText={onPostText}\r\n          enableChange={enableChange}\r\n          editMode={editMode}\r\n          setEditMode={() => setEditMode(!editMode)}\r\n          statusValue={statusValue}\r\n          setStatusValue={(char) => setStatusValue(char)}\r\n          onDisableSaveStatus={onDisableSaveStatus}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ profilePage, auth }) => ({\r\n  posts: profilePage.posts,\r\n  fullName: profilePage.fullName,\r\n  profileImg: profilePage.profileImg,\r\n  status: profilePage.status,\r\n  isLoading: auth.isLoading,\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { addPost, getProfile, setStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n","import { ADD_POST, SET_PROFILE_DATA } from './'\r\nimport { profileAPI } from '../DAL/api'\r\nimport { setLoading } from './'\r\n\r\nexport const addPost = (id, name, text) => ({ type: ADD_POST, id, name, text })\r\nconst setProfileData = (data) => {\r\n  return {\r\n    type: SET_PROFILE_DATA,\r\n    profileImg: data.photos.small,\r\n    status: data.aboutMe,\r\n    fullName: data.fullName,\r\n  }\r\n}\r\n\r\nexport const getProfile = (id) => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  const response = await profileAPI.getProfile(id)\r\n\r\n  dispatch(setLoading(false))\r\n\r\n  if (response.status === 200) {\r\n    dispatch(setProfileData(response.data))\r\n  }\r\n}\r\n\r\nexport const setStatus = (status) => async (dispatch) => {\r\n  dispatch(setLoading(true))\r\n  const statusChanged = await profileAPI.setStatus(status)\r\n  dispatch(setLoading(false))\r\n\r\n  if (statusChanged.data.resultCode === 0) {\r\n    return 0\r\n  } else {\r\n    return 1\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './users.scss'\r\nimport { Button } from 'antd'\r\n\r\nexport const User = ({\r\n  fullName,\r\n  img,\r\n  status,\r\n  followed,\r\n  subscribe,\r\n  id,\r\n  isSubscribing,\r\n  history,\r\n}) => {\r\n  return (\r\n    <div className='user'>\r\n      <img\r\n        className='user__image'\r\n        src={img}\r\n        alt='user'\r\n        onClick={() => {\r\n          history.push(`/profile/${id}`)\r\n        }}\r\n      />\r\n      <br />\r\n      <div className='user__body'>\r\n        <h4 className='user__body-name'>{fullName}</h4>\r\n        <span className='user__body-status'>{status}</span>\r\n      </div>\r\n      <div className='user__footer'>\r\n        <Button\r\n          type='primary'\r\n          size='small'\r\n          onClick={() => subscribe(id.toString())}\r\n          loading={isSubscribing}\r\n          disabled={isSubscribing}\r\n        >\r\n          {followed ? 'unsubscribe' : 'subscribe'}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'antd'\r\nimport './users.scss'\r\nimport noUserImg from '../../assets/images/noUserImg.png'\r\nimport { User } from './User'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const Users = React.memo((props) => {\r\n  //users pageSize page totalUsers\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <div className='users'>\r\n      <Pagination\r\n        current={props.page}\r\n        pageSize={props.pageSize}\r\n        total={props.totalUsers}\r\n        size='small'\r\n        showTitle={false}\r\n        simple\r\n        responsive\r\n        className='users__pagination'\r\n      />\r\n\r\n      {props.users &&\r\n        props.users.map((u) => (\r\n          <User\r\n            key={u.id}\r\n            followed={u.followed}\r\n            img={u.photos.small || noUserImg}\r\n            fullName={u.name}\r\n            status={u.status}\r\n            subscribe={props.subscribe}\r\n            id={u.id}\r\n            isSubscribing={props.subscribingProcess.some((id) => id === u.id)}\r\n            history={history}\r\n          />\r\n        ))}\r\n    </div>\r\n  )\r\n})\r\n","import React, { Component } from 'react'\r\nimport { Users } from './Users'\r\nimport { getUsers, subscribe } from '../../redux/actions'\r\nimport { connect } from 'react-redux'\r\nimport { Notification } from '../../components'\r\n\r\nclass UsersContainer extends Component {\r\n  componentDidMount() {\r\n    const fetchData = async () => {\r\n      await this.props.getUsers()\r\n    }\r\n    fetchData()\r\n  }\r\n\r\n  toSubscribe = async (id) => {\r\n    const response = await this.props.subscribe(id)\r\n    if (response === 0) return Notification('success', \"You've subscribed\")\r\n    return Notification('error', response)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Users\r\n        users={this.props.users}\r\n        pageSize={this.props.pageSize}\r\n        page={this.props.page}\r\n        totalUsers={this.props.totalUsers}\r\n        subscribe={this.toSubscribe}\r\n        subscribingProcess={this.props.subscribingProcess}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ usersPage }) => ({\r\n  users: usersPage.users[0],\r\n  totalUsers: usersPage.totalUsers,\r\n  pageSize: usersPage.pageSize,\r\n  page: usersPage.page,\r\n  subscribingProcess: usersPage.subscribingProcess,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getUsers, subscribe })(UsersContainer)\r\n","import React, { useEffect } from 'react'\nimport './assets/index.scss'\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { NavbarContainer } from './components'\nimport { LoginContainer, ProfileContainer } from './pages'\nimport { UsersContainer } from './pages'\nimport { connect } from 'react-redux'\nimport { checkIfAuthorized } from './redux/actions/authActions'\n\nfunction App({ checkIfAuthorized }) {\n  useEffect(() => {\n    ;(async function () {\n      const response = await checkIfAuthorized()\n      if (response === 1) return <Redirect to='/login' />\n      if (response === 0) return <Redirect to='/profile' />\n    })()\n  }, [checkIfAuthorized])\n\n  return (\n    <>\n      <Switch>\n        <div className='app-wrapper'>\n          <div className='testN'>\n            <Route\n              path={['/profile', '/users']}\n              render={() => <NavbarContainer />}\n            />\n          </div>\n          <div className='testC'>\n            <Route\n              path='/profile/:profileId?'\n              render={() => <ProfileContainer />}\n            />\n            <Route path='/users' render={() => <UsersContainer />} />\n          </div>\n        </div>\n      </Switch>\n      <Route exact path='/' render={() => <Redirect to='/login' />} />\n      <Route exact path='/login' render={() => <LoginContainer />} />\n    </>\n  )\n}\n\nexport default connect(null, { checkIfAuthorized })(App)\n","import { SET_AUTH, SET_LOADING } from '../actions'\r\n\r\nconst initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isLoading: false,\r\n}\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH:\r\n      return { ...state, ...action.payload }\r\n\r\n    case SET_LOADING:\r\n      return { ...state, isLoading: action.boolean }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","import { ADD_POST, SET_PROFILE_DATA } from '../actions'\r\n\r\nconst initialState = {\r\n  fullName: '',\r\n  profileImg: null,\r\n  status: '',\r\n\r\n  posts: [{ id: 1, name: 'Alex Fox', text: 'Hello world!' }],\r\n}\r\n\r\nconst profilePage = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      const new_post = { id: action.id, name: action.name, text: action.text }\r\n      return { ...state, posts: [...state.posts.concat(new_post)] }\r\n\r\n    case SET_PROFILE_DATA:\r\n      const { profileImg, status, fullName } = action\r\n      return {\r\n        ...state,\r\n        profileImg,\r\n        status,\r\n        fullName,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default profilePage\r\n","import { CHANGE_PAGE, GET_USERS, TO_FOLLOW, SUBSCRIBE } from '../actions'\r\n\r\nconst initialState = {\r\n  page: 1,\r\n  pageSize: 10,\r\n  totalUsers: null,\r\n  users: [],\r\n  subscribingProcess: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PAGE:\r\n      return { ...state, page: action.payload }\r\n\r\n    case GET_USERS:\r\n      const { payload, totalUsers } = action\r\n      return { ...state, users: [...state.users, payload], totalUsers }\r\n\r\n    case TO_FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users,\r\n          state.users.map((u) => {\r\n            if (u.id === action.id) return { ...u, followed: true }\r\n            return u\r\n          }),\r\n        ],\r\n      }\r\n\r\n    case SUBSCRIBE:\r\n      return {\r\n        ...state,\r\n        subscribingProcess: action.isFetching\r\n          ? [...state.subscribingProcess, action.userId]\r\n          : state.subscribingProcess.filter((id) => id !== action.userId),\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { auth, profilePage, usersPage } from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n  auth,\r\n  profilePage,\r\n  usersPage,\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nwindow.store = store\r\n","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { store } from './redux/store'\nimport { Provider } from 'react-redux'\n\nrender(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/noUserImg.f7162f08.png\";"],"sourceRoot":""}